@model ProductOverviewModel
@using Nop.Core
@using Nop.Core.Domain.Catalog
@using Nop.Core.Domain.Orders
@using Nop.Core.Domain.Tax
@inject CatalogSettings catalogSettings
@inject IWorkContext workContext
@{
    //prepare "Add to cart" AJAX link
    var addtocartlink = "";
    var shoppingCartTypeId = (int)ShoppingCartType.ShoppingCart;
    var quantity = 1;

    if (Model.ProductPrice.ForceRedirectionAfterAddingToCart)
    {
        addtocartlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = 46, shoppingCartTypeId = shoppingCartTypeId, quantity = 5, forceredirection = Model.ProductPrice.ForceRedirectionAfterAddingToCart });
    }
    else
    {
        addtocartlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = 46, shoppingCartTypeId = shoppingCartTypeId, quantity = 5, forceredirection = Model.ProductPrice.ForceRedirectionAfterAddingToCart });
    }

    @Html.Hidden("cartLink", addtocartlink);

    var addtowishlistlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = (int)ShoppingCartType.Wishlist, quantity = quantity });
    var addtocomparelink = Url.RouteUrl("AddProductToCompare", new { productId = Model.Id });
}

@{ 
  var quantName = "";
}

<tr class="table-row">
    <td class="table-td">
        <div>
            <a href="@Url.RouteUrl("Product", new { SeName = Model.SeName })" title="@Model.DefaultPictureModel.Title">
                <img class="table-picture" alt="@Model.DefaultPictureModel.AlternateText" src="@Model.DefaultPictureModel.ImageUrl" title="@Model.DefaultPictureModel.Title" />
            </a>
        </div>
    </td>
    <td class="table-title table-td">
        <span class="table-title">
            <input name="hiddenID" type="hidden" value="@Model.Id" />
            <a href="@Url.RouteUrl("Product", new {SeName = Model.SeName})">@Model.Name</a>
        </span>
    </td>
    <td class="table-td table-price"> <span class="price actual-price">@Model.ProductPrice.OldPrice</span></td>
    <td class="table-td table-price"> <span class="price actual-price">@Model.ProductPrice.Price</span></td>
    <td class="table-td">

        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.ProductBoxAddinfoMiddle, additionalData = Model })
        @if (!Model.ProductPrice.DisableBuyButton)
        {
            var addToCartText = T("ShoppingCart.AddToCart").Text;
            var name = String.Format("textQuant{0}", Model.Id);
            string ButtonName = "btn" + Model.Id.ToString();
            int buttonIndex = Model.Index;
            quantName = "EnteredQuantity" + Model.Id.ToString();
            int tabindex = Model.Index + 1;

            <input asp-for="EnteredQuantity" name="enteredQuantity" class="qty-input quantity-table" type="number" max="1000" min="0" tabindex="@tabindex" />
            <script asp-location="Footer">
                    //when a customer clicks 'Enter' button we submit the "add to cart" button (if visible)
                    $(document).ready(function() {
                        $("#@Html.IdFor(model => model.EnteredQuantity)").on("keydown", function(event) {
                if (event.keyCode == 13) {
                                $("#add-to-cart-button-@Model.Id").trigger("click");
                return false;
            } });
                    });
            </script>

        }
    </td>
    <td class="table-td">
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.ProductBoxAddinfoMiddle, additionalData = Model })
        @if (!Model.ProductPrice.DisableBuyButton)
        {
            var addToCartText = T("ShoppingCart.AddToCart").Text;
            var name = String.Format("textQuant{0}", Model.Id);
            string ButtonName = "btn" + Model.Id.ToString();
            int buttonIndex = Model.Index;

            <input name="addToCart" type="button" value="@(addToCartText)"
                   class="table-button" data-assigned-id="@Model.Id"
                   onclick="AjaxCart.addproducttocart_details('@Url.RouteUrl("AddProductToCart-Details", new { productId = Model.Id, shoppingCartTypeId = (int)ShoppingCartType.ShoppingCart, btnName = ButtonName, index = buttonIndex })',
                                                    '#product-massdetails-form');
                                                    return false;" />
        }
    </td>
</tr>